name: app

options:
  bundleIdPrefix: example.com
  deploymentTarget:
    iOS: 15.0
  carthageExecutablePath: mint run Carthage/Carthage

targetTemplates:
  EmbeddedFramework:
    platform: iOS
    type: framework
    sources:
      - path: ${target_name}
  EmbeddedFrameworkTests:
    type: bundle.unit-test
    platform: iOS
    dependencies:
      - target: app
    sources:
      - path: ${target_name}
      - path: ${target_name}
        excludes:
          - Info.plist
        buildPhase: resources
  FeatureFramework:
    platform: iOS
    type: framework
    sources:
      - path: Features/${target_name}/${target_name}
    dependencies:
      - target: Core
  SandboxApp:
    type: application
    platform: iOS
    dependencies:
      - target: Core

targets:
  app:
    type: application
    platform: iOS
    sources:
      - app
    dependencies:
      - target: Alpha

  Core:
    templates:
      - EmbeddedFramework
    transitivelyLinkDependencies: true
    dependencies:
      - target: Umbrella
  Umbrella:
    platform: iOS
    type: framework.static
    dependencies:
      - package: NeedleFoundation
        product: NeedleFoundation

  # Features
  Alpha:
    templates:
      - FeatureFramework
  AlphaSandboxApp:
    templates:
      - SandboxApp
    sources:
      - path: Features/Alpha/${target_name}
    dependencies:
      - target: Alpha
    preBuildScripts:
      - name: Generate resolving dependencies code
        script: |
          cd "$PROJECT_DIR" && \
          /opt/homebrew/bin/needle generate \
          Features/Alpha/AlphaSandboxApp/NeedleGenerated.swift \
          Features/Alpha \
          --header-doc .needle/copyright_header.txt

packages:
  NeedleFoundation:
    url: https://github.com/uber/needle
    from: 0.17.2
